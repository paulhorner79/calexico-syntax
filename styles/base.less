@import "syntax-variables";

.editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

.editor .gutter {
  background-color: @syntax-gutter-background-color;
  color: @syntax-gutter-text-color;
}

.editor .gutter .line-number.cursor-line {
  background-color: @syntax-gutter-background-color-selected;
  color: @syntax-gutter-text-color-selected;
}

.editor .gutter .line-number.cursor-line-no-selection {
  color: @syntax-gutter-text-color-selected;
}

.editor .wrap-guide {
  color: @syntax-wrap-guide-color;
}

.editor .indent-guide {
  color: @syntax-indent-guide-color;
}

.editor .invisible-character {
  color: @syntax-invisible-character-color;
}

.editor .search-results .marker .region {
  background-color: transparent;
  border: @syntax-result-marker-color;
}

.editor .search-results .marker.current-result .region {
  border: @syntax-result-marker-color-selected;
}

.editor.is-focused .cursor {
  border-color: @syntax-cursor-color;
}

.editor.is-focused .selection .region {
  background-color: @syntax-selection-color;
}

.comment {
  color: @gray;
}

.string {
  color: @light-blue;
}

.constant.numeric {
  color: @orange;
}

.constant.language {
  color: @orange;
}

.constant.character, .constant.other {
  color: @orange;
}

.variable {
}

.keyword {
  color: @red;
}

.storage {
  color: @red;
}

.storage.type {
  font-style: italic;
  color: @cyan;
}

.entity.name.class {
  text-decoration: underline;
  color: @blue;
}

.entity.other.inherited-class {
  font-style: italic;
  text-decoration: underline;
  color: @blue;
}

.entity.name.function {
  color: @blue;
}

.variable.parameter {
  font-style: italic;
  color: @orange;
}

.entity.name.tag {
  color: @red;
}

.entity.other.attribute-name {
  color: @blue;
}

.support.function {
  color: @light-cyan;
}

.support.constant {
  color: @light-green;
}

.support.type, .support.class {
  font-style: italic;
  color: @light-green;
}

.support.other.variable {
}

.support.other.namespace, .entity.name.type.namespace {
  color: @light-purple;
}

.support.other.namespace.use-as.php {
  color: @cyan;
}

.variable.language.namespace.php {
  color: @light-red;
}

.punctuation.separator.inheritance.php {
  color: @purple;
}

.support.function.misc.css, .support.constant.property-value.css, .support.constant.font-name.css {
  color: @light-yellow;
}

.meta.tag.template.value.twig, .meta.tag.template.block.twig {
  color: @light-red;
}

.keyword.control.twig {
  color: @purple;
}

.variable.other.twig {
  color: @light-purple;
}

.variable.other.property.twig {
  color: @light-purple;
}

.constant.language.twig {
  color: @light-yellow;
}

.constant.numeric.twig {
  color: @light-purple;
}

.support.function.twig {
  color: @cyan;
}

.meta.function-call.other.twig {
  color: @light-orange;
}

.meta.function-call.twig {
  color: @orange;
}

.invalid {
  color: @very-light-gray;
  background-color: @red;
}

.invalid.deprecated {
  color: @very-light-gray;
  background-color: @light-red;
}

.editor {
    .invisible-character {
        opacity: .5;
    }
}

.tree-view {
    .selected:before {
        box-shadow: inset -3px 0 0 rgba(0,0,0, .05);
    }

    font-size: 11px;
        &.list-tree .list-item {
            line-height: 20px !important;
    }
    .selected:before {
        height: 20px;
    }
    .project-root {
        &:before {
            height: 31px;
        }
        & > .header .name {
            line-height: 31px;
            font-weight: bolder;
        }
    }
}

.focusable-panel {
    opacity: 1;
    box-shadow: inset -3px 0 0 rgba(0,0,0, .05);
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @light-green;
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}

atom-text-editor::shadow .wrap-guide {
  width: 1px;
  color: @gray;
}
